{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "MaleehaADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DF Increment Keys')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "az_ADLS_all_emp",
								"type": "DatasetReference"
							},
							"name": "ConsolidateEmployees"
						},
						{
							"dataset": {
								"referenceName": "az_ADLS_Emp3",
								"type": "DatasetReference"
							},
							"name": "Emp3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_ADLS_all_emp",
								"type": "DatasetReference"
							},
							"name": "ConsolidatedEmployees"
						}
					],
					"transformations": [
						{
							"name": "AddDummyColumn"
						},
						{
							"name": "GetMaxID"
						},
						{
							"name": "JoinBothSources"
						},
						{
							"name": "AddIDColumn"
						},
						{
							"name": "AddIDandMaxID"
						},
						{
							"name": "RemoveUnnecessaryColumns"
						},
						{
							"name": "MergeEmp3intoConsolidatedEmployee"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmpID as string,",
						"          { Name} as string,",
						"          { Country} as string,",
						"          { Department} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ConsolidateEmployees",
						"source(output(",
						"          Name as string,",
						"          { Country} as string,",
						"          { Department} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Emp3",
						"ConsolidateEmployees derive(Dummy = 'Dummy') ~> AddDummyColumn",
						"AddDummyColumn aggregate(groupBy(Dummy),",
						"     MaxID = max(EmpID)) ~> GetMaxID",
						"GetMaxID, Emp3 join(1==1,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinBothSources",
						"JoinBothSources keyGenerate(output(id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> AddIDColumn",
						"AddIDColumn derive(EmpID = toString(toInteger(id) + toInteger(MaxID))) ~> AddIDandMaxID",
						"AddIDandMaxID select(mapColumn(",
						"          EmpID,",
						"          Name,",
						"          { Country},",
						"          { Department}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveUnnecessaryColumns",
						"ConsolidateEmployees, RemoveUnnecessaryColumns union(byName: false)~> MergeEmp3intoConsolidatedEmployee",
						"MergeEmp3intoConsolidatedEmployee sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmpID as string,",
						"          { Name} as string,",
						"          { Country} as string,",
						"          { Department} as string",
						"     ),",
						"     partitionFileNames:['ConsolidatedEmployee.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ConsolidatedEmployees"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF SalesRunningTotal')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "az_ADLS_MaySales_IN",
								"type": "DatasetReference"
							},
							"name": "MaySales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_ADLS_RunningTotal_OU",
								"type": "DatasetReference"
							},
							"name": "SalesRunningTotal"
						}
					],
					"transformations": [
						{
							"name": "CalculateRunningTotal"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesDate as string,",
						"          SalesItem as string,",
						"          Country as string,",
						"          Quantity as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MaySales",
						"MaySales window(asc(SalesDate, true),",
						"     RunningTotal = sum(toInteger(Quantity))) ~> CalculateRunningTotal",
						"CalculateRunningTotal sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['SalesRunningTotal.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> SalesRunningTotal"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF LogADF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "az_ADLS_dummy",
								"type": "DatasetReference"
							},
							"name": "DummySource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_ADLS_Log",
								"type": "DatasetReference"
							},
							"name": "ADFLogFile"
						}
					],
					"transformations": [
						{
							"name": "ParametersValue"
						},
						{
							"name": "RemoveDummyColumn"
						}
					],
					"scriptLines": [
						"parameters{",
						"     ADFName as string,",
						"     PipeLineName as string,",
						"     RunID as string,",
						"     Status as string,",
						"     TriggerName as string,",
						"     logFileName as string",
						"}",
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DummySource",
						"DummySource derive(ADFName = $ADFName,",
						"          PipeLineName = $PipeLineName,",
						"          RunId = $RunID,",
						"          Status = $Status,",
						"          TriggerName = $TriggerName) ~> ParametersValue",
						"ParametersValue select(mapColumn(",
						"          ADFName,",
						"          PipeLineName,",
						"          RunId,",
						"          Status,",
						"          TriggerName",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveDummyColumn",
						"RemoveDummyColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($logFileName)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ADFLogFile"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF LogADF_append')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "az_ADLS_dummy",
								"type": "DatasetReference"
							},
							"name": "DummySource"
						},
						{
							"dataset": {
								"referenceName": "az_ADLS_logfile",
								"type": "DatasetReference"
							},
							"name": "logfile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_ADLS_Log",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ParametersValue"
						},
						{
							"name": "RemoveDummyColumn"
						},
						{
							"name": "union"
						}
					],
					"scriptLines": [
						"parameters{",
						"     ADFName as string,",
						"     PipeLineName as string,",
						"     RunID as string,",
						"     Status as string,",
						"     TriggerName as string,",
						"     logFileName as string",
						"}",
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DummySource",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:[($logFileName)]) ~> logfile",
						"DummySource derive(ADFName = $ADFName,",
						"          PipeLineName = $PipeLineName,",
						"          RunId = $RunID,",
						"          Status = $Status,",
						"          TriggerName = $TriggerName) ~> ParametersValue",
						"ParametersValue select(mapColumn(",
						"          ADFName,",
						"          PipeLineName,",
						"          RunId,",
						"          Status,",
						"          TriggerName",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveDummyColumn",
						"RemoveDummyColumn, logfile union(byName: true)~> union",
						"union sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($logFileName)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute DF ConsolidatedEmployee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ConsolidatedEmployee",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "RemoveDups",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Emp1": {},
									"Emp2": {},
									"ConsolidatedEmployee": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute DF_HandlingErrorRows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_HandlingErrorRows",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HandlingErrorRows",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"GlobalSalesMay2020": {},
									"GlobalSalesBad": {},
									"GlobalSales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute Data Flow Product Transformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Product Transformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Product Transformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductAll": {},
									"ProductModel": {},
									"FinalProduct": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute Process Fixed Length')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Process Fixed Length",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Process Fixed Length",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmpTextFile": {},
									"CleanEmp": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Delete Files older Than 30 Days",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-14T03:33:00",
						"timeZone": "Pakistan Standard Time",
						"schedule": {
							"minutes": [
								1
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute DF IncrementKeys')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF IncrementKeys",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF Increment Keys",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ConsolidateEmployees": {},
									"Emp3": {},
									"ConsolidatedEmployees": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF Increment Keys')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute DF SalesRunningTotal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF SalesRunningTotal",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF SalesRunningTotal",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MaySales": {},
									"SalesRunningTotal": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF SalesRunningTotal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute ADFLogs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LogFileName",
							"value": {
								"value": "@concat(formatDateTime(utcnow(),'yyyy-MM-dd'),'_log.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_ADLS_logfile",
								"type": "DatasetReference",
								"parameters": {
									"logfileName": {
										"value": "@variables('LogFileName')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Check whether file exists or not",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "DF LogADF",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF LogADF",
											"type": "DataFlowReference",
											"parameters": {
												"ADFName": {
													"value": "'@{pipeline().DataFactory}'",
													"type": "Expression"
												},
												"PipeLineName": {
													"value": "'@{pipeline().Pipeline}'",
													"type": "Expression"
												},
												"RunID": {
													"value": "'@{pipeline().RunId}'",
													"type": "Expression"
												},
												"Status": {
													"value": "'@{string('Success')}'",
													"type": "Expression"
												},
												"TriggerName": {
													"value": "'@{pipeline().TriggerName}'",
													"type": "Expression"
												},
												"logFileName": {
													"value": "'@{variables('LogFileName')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"DummySource": {},
												"ADFLogFile": {}
											},
											"linkedServiceParameters": {}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "DF LogADF_append",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF LogADF_append",
											"type": "DataFlowReference",
											"parameters": {
												"ADFName": {
													"value": "'@{pipeline().DataFactory}'",
													"type": "Expression"
												},
												"PipeLineName": {
													"value": "'@{pipeline().Pipeline}'",
													"type": "Expression"
												},
												"RunID": {
													"value": "'@{pipeline().RunId}'",
													"type": "Expression"
												},
												"Status": {
													"value": "'@{string('Success')}'",
													"type": "Expression"
												},
												"TriggerName": {
													"value": "'@{pipeline().TriggerName}'",
													"type": "Expression"
												},
												"logFileName": {
													"value": "'@{variables('LogFileName')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"DummySource": {},
												"logfile": {
													"logfileName": {
														"value": "@variables('LogFileName')",
														"type": "Expression"
													}
												},
												"sink1": {}
											},
											"linkedServiceParameters": {}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"LogFileName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF LogADF_append')]",
				"[concat(variables('factoryId'), '/dataflows/DF LogADF')]"
			]
		}
	]
}